!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$	cpp	/^format	tags_opencv	\/^!_TAG_FILE_FORMAT	2	\\\/extended format; --format=1 will not append ;" to lines\\\/$\/;"	v$/;"	v
$	tags_pcl_1_8	/^AVERAGE_DEPTH_CHANGE	\/usr\/local\/include\/pcl-1.8\/pcl\/features\/integral_image_normal.h	\/^        AVERAGE_DEPTH_CHANGE,$\/;"	e	enum:pcl::IntegralImageNormalEstimation::NormalEstimationMethod$/;"	v	typeref:enum:
$	tags_pcl_1_8	/^Add	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/vector.hpp	\/^    void NVector<T,Dim>::Add(const NVector<T,Dim>& V1,const T& scale1,const NVector<T,Dim>& V2,NVector<T,Dim>& Out){$\/;"	f	class:pcl::poisson::NVector	signature:(const NVector<T,Dim>& V1,const T& scale1,const NVector<T,Dim>& V2,NVector<T,Dim>& Out)$/;"	m	class:__anon1	file:	access:private
$	tags_pcl_1_8	/^Add	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/vector.hpp	\/^    void Vector<T>::Add(const Vector<T>& V1,const T& scale1,const Vector<T>& V2,Vector<T>& Out){$\/;"	f	class:pcl::poisson::Vector	signature:(const Vector<T>& V1,const T& scale1,const Vector<T>& V2,Vector<T>& Out)$/;"	m	class:__anon1::__anon2	file:	access:private
$	tags_pcl_1_8	/^AddScaled	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/polynomial.hpp	\/^    void Polynomial<Degree>::AddScaled(const Polynomial& p1,const Polynomial& p2,double w2,Polynomial& q){$\/;"	f	class:pcl::poisson::Polynomial	signature:(const Polynomial& p1,const Polynomial& p2,double w2,Polynomial& q)$/;"	m	class:__anon1::__anon2::__anon3	file:	access:private
$	tags_pcl_1_8	/^AddScaled	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/polynomial.hpp	\/^    void Polynomial<Degree>::AddScaled(const Polynomial& p1,double w1,const Polynomial& p2,double w2,Polynomial& q){$\/;"	f	class:pcl::poisson::Polynomial	signature:(const Polynomial& p1,double w1,const Polynomial& p2,double w2,Polynomial& q)$/;"	m	class:__anon1::__anon2::__anon3::__anon4	file:	access:private
$	tags_pcl_1_8	/^AdjacencySetFunction	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/multi_grid_octree_data.h	\/^        class AdjacencySetFunction{$\/;"	c	class:pcl::poisson::Octree	access:private$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5	file:	access:private
$	tags_pcl_1_8	/^Allocator	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/allocator.h	\/^    class Allocator{$\/;"	c	namespace:pcl::poisson$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6	file:	access:public
$	tags_pcl_1_8	/^Alt	\/usr\/local\/include\/pcl-1.8\/pcl\/visualization\/keyboard_event.h	\/^        static const unsigned int Alt   = 1;$\/;"	m	class:pcl::visualization::KeyboardEvent	access:public$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6	file:	access:public
$	tags_pcl_1_8	/^AntipodalCornerIndex	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/marching_cubes_poisson.h	\/^        static int  AntipodalCornerIndex	(int idx);$\/;"	p	class:pcl::poisson::Cube	access:public	signature:(int idx)$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6	file:	access:public
$	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6	file:	access:public
$	tags_pcl_1_8	/^BFGS::Parameters	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  struct Parameters {$\/;"	s	class:BFGS	access:public$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	file:	access:private
$	tags_pcl_1_8	/^BFGS::resetParameters	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  void resetParameters(void) { parameters = Parameters(); }$\/;"	f	class:BFGS	access:public	signature:(void)$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	typeref:struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon9	file:	access:private
$	tags_pcl_1_8	/^BFGSDummyFunctor	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  BFGSDummyFunctor() : m_inputs(InputsAtCompileTime) {}$\/;"	f	struct:BFGSDummyFunctor	access:public	signature:()$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	typeref:class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon10	file:	access:private
$	tags_pcl_1_8	/^BFGSDummyFunctor::BFGSDummyFunctor	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  BFGSDummyFunctor(int inputs) : m_inputs(inputs) {}$\/;"	f	struct:BFGSDummyFunctor	access:public	signature:(int inputs)$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	typeref:struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon11	file:	access:private
$	tags_pcl_1_8	/^BFGSDummyFunctor::Scalar	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  typedef _Scalar Scalar;$\/;"	t	struct:BFGSDummyFunctor	access:public$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	file:	access:private
$	tags_pcl_1_8	/^BFGSDummyFunctor::inputs	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  int inputs() const { return m_inputs; }$\/;"	f	struct:BFGSDummyFunctor	access:public	signature:() const$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	typeref:struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon12	file:	access:private
$	tags_pcl_1_8	/^BFGSSpace	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^namespace BFGSSpace {$\/;"	n$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
$	tags_pcl_1_8	/^BFGSSpace::Running	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^    Running = -1,$\/;"	e	enum:BFGSSpace::Status$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	typeref:enum:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::	file:	access:public
$	tags_pcl_1_8	/^BOOST_CONCEPT_ASSERT	\/usr\/local\/include\/pcl-1.8\/pcl\/geometry\/mesh_base.h	\/^        BOOST_CONCEPT_ASSERT ((boost::Convertible <IsManifold, bool>));$\/;"	p	class:pcl::geometry::MeshBase	access:public	signature:(boost::Convertible <IsManifold, bool>)$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
$	tags_pcl_1_8	/^BSplineElements	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/bspline_data.h	\/^        BSplineElements( void ) { denominator = 1; }$\/;"	f	struct:pcl::poisson::BSplineElements	access:public	signature:( void )$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	typeref:struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::__anon14	file:	access:public
$	tags_pcl_1_8	/^BSplineElements	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/bspline_data.hpp	\/^    BSplineElements< Degree >::BSplineElements( int res , int offset , int boundary )$\/;"	f	class:pcl::poisson::BSplineElements	signature:( int res , int offset , int boundary )$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
$	tags_pcl_1_8	/^BUTTERFLY	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/vtk_smoothing\/vtk_mesh_subdivision.h	\/^      { LINEAR, LOOP, BUTTERFLY };$\/;"	e	enum:pcl::MeshSubdivisionVTK::MeshSubdivisionVTKFilterType$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
$	tags_pcl_1_8	/^BinaryTreeThresholdBasedBranchEstimator	\/usr\/local\/include\/pcl-1.8\/pcl\/ml\/branch_estimator.h	\/^      inline BinaryTreeThresholdBasedBranchEstimator () {}$\/;"	f	class:pcl::BinaryTreeThresholdBasedBranchEstimator	access:public	signature:()$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	typeref:class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::__anon15	file:	access:public
$	tags_pcl_1_8	/^Bind	\/usr\/local\/include\/pcl-1.8\/pcl\/visualization\/vtk\/vtkVertexBufferObject.h	\/^  void Bind();$\/;"	p	class:vtkVertexBufferObject	access:public	signature:()$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
$	tags_pcl_1_8	/^BivariatePolynomialT	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/bivariate_polynomial.h	\/^      BivariatePolynomialT (const BivariatePolynomialT& other);$\/;"	p	class:pcl::BivariatePolynomialT	access:public	signature:(const BivariatePolynomialT& other)$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
ACCESS_FAST	tags_opencv	/^ACCESS_MASK	\/usr\/local\/include\/opencv2\/core\/mat.hpp	\/^    ACCESS_RW=3<<24, ACCESS_MASK=ACCESS_RW, ACCESS_FAST=1<<26 };$\/;"	e	enum:cv::__anon238$/;"	v	typeref:enum:
ACCESS_FAST	tags_opencv	/^ACCESS_RW	\/usr\/local\/include\/opencv2\/core\/mat.hpp	\/^    ACCESS_RW=3<<24, ACCESS_MASK=ACCESS_RW, ACCESS_FAST=1<<26 };$\/;"	e	enum:cv::__anon238$/;"	v	typeref:enum:
ACCESS_MASK	tags_opencv	/^ACCESS_MASK	\/usr\/local\/include\/opencv2\/core\/mat.hpp	\/^    ACCESS_RW=3<<24, ACCESS_MASK=ACCESS_RW, ACCESS_FAST=1<<26 };$\/;"	e	enum:cv::__anon238$/;"	v	typeref:enum:
ACCESS_MASK	tags_opencv	/^ACCESS_RW	\/usr\/local\/include\/opencv2\/core\/mat.hpp	\/^    ACCESS_RW=3<<24, ACCESS_MASK=ACCESS_RW, ACCESS_FAST=1<<26 };$\/;"	e	enum:cv::__anon238$/;"	v	typeref:enum:
ASCIIReader	tags_pcl_1_8	/^ASCIIReader	\/usr\/local\/include\/pcl-1.8\/pcl\/io\/ascii_io.h	\/^      ASCIIReader ();$\/;"	p	class:pcl::ASCIIReader	access:public	signature:()$/;"	p	file:	signature:()
B	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
BLOCK_32_TO_63	tags_pcl_1_8	/^BLOCK_0_TO_31	\/usr\/local\/include\/pcl-1.8\/pcl\/io\/hdl_grabber.h	\/^        BLOCK_0_TO_31 = 0xeeff, BLOCK_32_TO_63 = 0xddff$\/;"	e	enum:pcl::HDLGrabber::HDLBlock$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
CS	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
DIV	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
JM	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
K	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
KL	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
L1	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
L2	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
L2_SQR	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
LINF	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
PF	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
SUBLINEAR	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
Scalar	tags_pcl_1_8	/^BFGSDummyFunctor::Scalar	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  typedef _Scalar Scalar;$\/;"	t	struct:BFGSDummyFunctor	access:public$/;"	t	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	file:	access:private
__anon1::$	tags_pcl_1_8	/^Add	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/vector.hpp	\/^    void NVector<T,Dim>::Add(const NVector<T,Dim>& V1,const T& scale1,const NVector<T,Dim>& V2,NVector<T,Dim>& Out){$\/;"	f	class:pcl::poisson::NVector	signature:(const NVector<T,Dim>& V1,const T& scale1,const NVector<T,Dim>& V2,NVector<T,Dim>& Out)$/;"	m	class:__anon1	file:	access:private
__anon1::__anon2::$	tags_pcl_1_8	/^Add	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/vector.hpp	\/^    void Vector<T>::Add(const Vector<T>& V1,const T& scale1,const Vector<T>& V2,Vector<T>& Out){$\/;"	f	class:pcl::poisson::Vector	signature:(const Vector<T>& V1,const T& scale1,const Vector<T>& V2,Vector<T>& Out)$/;"	m	class:__anon1::__anon2	file:	access:private
__anon1::__anon2::__anon3::$	tags_pcl_1_8	/^AddScaled	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/polynomial.hpp	\/^    void Polynomial<Degree>::AddScaled(const Polynomial& p1,const Polynomial& p2,double w2,Polynomial& q){$\/;"	f	class:pcl::poisson::Polynomial	signature:(const Polynomial& p1,const Polynomial& p2,double w2,Polynomial& q)$/;"	m	class:__anon1::__anon2::__anon3	file:	access:private
__anon1::__anon2::__anon3::__anon4::$	tags_pcl_1_8	/^AddScaled	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/polynomial.hpp	\/^    void Polynomial<Degree>::AddScaled(const Polynomial& p1,double w1,const Polynomial& p2,double w2,Polynomial& q){$\/;"	f	class:pcl::poisson::Polynomial	signature:(const Polynomial& p1,double w1,const Polynomial& p2,double w2,Polynomial& q)$/;"	m	class:__anon1::__anon2::__anon3::__anon4	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::$	tags_pcl_1_8	/^AdjacencySetFunction	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/multi_grid_octree_data.h	\/^        class AdjacencySetFunction{$\/;"	c	class:pcl::poisson::Octree	access:private$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::$	tags_pcl_1_8	/^Allocator	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/allocator.h	\/^    class Allocator{$\/;"	c	namespace:pcl::poisson$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::$	tags_pcl_1_8	/^Alt	\/usr\/local\/include\/pcl-1.8\/pcl\/visualization\/keyboard_event.h	\/^        static const unsigned int Alt   = 1;$\/;"	m	class:pcl::visualization::KeyboardEvent	access:public$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::$	tags_pcl_1_8	/^AntipodalCornerIndex	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/marching_cubes_poisson.h	\/^        static int  AntipodalCornerIndex	(int idx);$\/;"	p	class:pcl::poisson::Cube	access:public	signature:(int idx)$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::$	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::B	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::CS	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::DIV	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::JM	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::K	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::KL	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::L1	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::L2	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::L2_SQR	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::LINF	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::PF	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7::SUBLINEAR	tags_pcl_1_8	/^B	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/norms.h	\/^  enum NormType {L1, L2_SQR, L2, LINF, JM, B, SUBLINEAR, CS, DIV, PF, K, KL, HIK};$\/;"	e	enum:pcl::NormType$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon7	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::$	tags_pcl_1_8	/^BFGS::Parameters	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  struct Parameters {$\/;"	s	class:BFGS	access:public$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::$	tags_pcl_1_8	/^BFGS::resetParameters	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  void resetParameters(void) { parameters = Parameters(); }$\/;"	f	class:BFGS	access:public	signature:(void)$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	typeref:struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon9	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::$	tags_pcl_1_8	/^BFGSDummyFunctor	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  BFGSDummyFunctor() : m_inputs(InputsAtCompileTime) {}$\/;"	f	struct:BFGSDummyFunctor	access:public	signature:()$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	typeref:class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon10	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::$	tags_pcl_1_8	/^BFGSDummyFunctor::BFGSDummyFunctor	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  BFGSDummyFunctor(int inputs) : m_inputs(inputs) {}$\/;"	f	struct:BFGSDummyFunctor	access:public	signature:(int inputs)$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	typeref:struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon11	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::$	tags_pcl_1_8	/^BFGSDummyFunctor::Scalar	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  typedef _Scalar Scalar;$\/;"	t	struct:BFGSDummyFunctor	access:public$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::$	tags_pcl_1_8	/^BFGSDummyFunctor::inputs	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  int inputs() const { return m_inputs; }$\/;"	f	struct:BFGSDummyFunctor	access:public	signature:() const$/;"	m	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	typeref:struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon12	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::Scalar	tags_pcl_1_8	/^BFGSDummyFunctor::Scalar	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  typedef _Scalar Scalar;$\/;"	t	struct:BFGSDummyFunctor	access:public$/;"	t	class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8	file:	access:private
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::$	tags_pcl_1_8	/^BFGSSpace	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^namespace BFGSSpace {$\/;"	n$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::$	tags_pcl_1_8	/^BFGSSpace::Running	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^    Running = -1,$\/;"	e	enum:BFGSSpace::Status$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	typeref:enum:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::$	tags_pcl_1_8	/^BOOST_CONCEPT_ASSERT	\/usr\/local\/include\/pcl-1.8\/pcl\/geometry\/mesh_base.h	\/^        BOOST_CONCEPT_ASSERT ((boost::Convertible <IsManifold, bool>));$\/;"	p	class:pcl::geometry::MeshBase	access:public	signature:(boost::Convertible <IsManifold, bool>)$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::$	tags_pcl_1_8	/^BSplineElements	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/bspline_data.h	\/^        BSplineElements( void ) { denominator = 1; }$\/;"	f	struct:pcl::poisson::BSplineElements	access:public	signature:( void )$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	typeref:struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::__anon14	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::$	tags_pcl_1_8	/^BSplineElements	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/bspline_data.hpp	\/^    BSplineElements< Degree >::BSplineElements( int res , int offset , int boundary )$\/;"	f	class:pcl::poisson::BSplineElements	signature:( int res , int offset , int boundary )$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::$	tags_pcl_1_8	/^BUTTERFLY	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/vtk_smoothing\/vtk_mesh_subdivision.h	\/^      { LINEAR, LOOP, BUTTERFLY };$\/;"	e	enum:pcl::MeshSubdivisionVTK::MeshSubdivisionVTKFilterType$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::$	tags_pcl_1_8	/^BinaryTreeThresholdBasedBranchEstimator	\/usr\/local\/include\/pcl-1.8\/pcl\/ml\/branch_estimator.h	\/^      inline BinaryTreeThresholdBasedBranchEstimator () {}$\/;"	f	class:pcl::BinaryTreeThresholdBasedBranchEstimator	access:public	signature:()$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	typeref:class:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::__anon15	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::$	tags_pcl_1_8	/^Bind	\/usr\/local\/include\/pcl-1.8\/pcl\/visualization\/vtk\/vtkVertexBufferObject.h	\/^  void Bind();$\/;"	p	class:vtkVertexBufferObject	access:public	signature:()$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::$	tags_pcl_1_8	/^BivariatePolynomialT	\/usr\/local\/include\/pcl-1.8\/pcl\/common\/bivariate_polynomial.h	\/^      BivariatePolynomialT (const BivariatePolynomialT& other);$\/;"	p	class:pcl::BivariatePolynomialT	access:public	signature:(const BivariatePolynomialT& other)$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::BLOCK_32_TO_63	tags_pcl_1_8	/^BLOCK_0_TO_31	\/usr\/local\/include\/pcl-1.8\/pcl\/io\/hdl_grabber.h	\/^        BLOCK_0_TO_31 = 0xeeff, BLOCK_32_TO_63 = 0xddff$\/;"	e	enum:pcl::HDLGrabber::HDLBlock$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::__anon14::denominator	tags_pcl_1_8	/^BSplineElements	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/bspline_data.h	\/^        BSplineElements( void ) { denominator = 1; }$\/;"	f	struct:pcl::poisson::BSplineElements	access:public	signature:( void )$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::__anon14	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::offset	tags_pcl_1_8	/^BSplineElements	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/bspline_data.hpp	\/^    BSplineElements< Degree >::BSplineElements( int res , int offset , int boundary )$\/;"	f	class:pcl::poisson::BSplineElements	signature:( int res , int offset , int boundary )$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon9::parameters	tags_pcl_1_8	/^BFGS::resetParameters	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  void resetParameters(void) { parameters = Parameters(); }$\/;"	f	class:BFGS	access:public	signature:(void)$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon9	file:	access:public
__anon238$	cpp	/^ACCESS_MASK	tags_opencv	\/^ACCESS_MASK	\\\/usr\\\/local\\\/include\\\/opencv2\\\/core\\\/mat.hpp	\\\/^    ACCESS_RW=3<<24, ACCESS_MASK=ACCESS_RW, ACCESS_FAST=1<<26 };$\\\/;"	e	enum:cv::__anon238$\/;"	v	typeref:enum:$/;"	m	class:cv	typeref:enum:cv::	file:
cv::__anon238$	cpp	/^ACCESS_MASK	tags_opencv	\/^ACCESS_MASK	\\\/usr\\\/local\\\/include\\\/opencv2\\\/core\\\/mat.hpp	\\\/^    ACCESS_RW=3<<24, ACCESS_MASK=ACCESS_RW, ACCESS_FAST=1<<26 };$\\\/;"	e	enum:cv::__anon238$\/;"	v	typeref:enum:$/;"	m	class:cv	typeref:enum:cv::	file:
denominator	tags_pcl_1_8	/^BSplineElements	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/bspline_data.h	\/^        BSplineElements( void ) { denominator = 1; }$\/;"	f	struct:pcl::poisson::BSplineElements	access:public	signature:( void )$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13::__anon14	file:	access:public
format	cpp	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
format	tags_opencv	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
format	tags_pcl_1_8	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
offset	tags_pcl_1_8	/^BSplineElements	\/usr\/local\/include\/pcl-1.8\/pcl\/surface\/3rdparty\/poisson4\/bspline_data.hpp	\/^    BSplineElements< Degree >::BSplineElements( int res , int offset , int boundary )$\/;"	f	class:pcl::poisson::BSplineElements	signature:( int res , int offset , int boundary )$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon13	file:	access:public
parameters	tags_pcl_1_8	/^BFGS::resetParameters	\/usr\/local\/include\/pcl-1.8\/pcl\/registration\/bfgs.h	\/^  void resetParameters(void) { parameters = Parameters(); }$\/;"	f	class:BFGS	access:public	signature:(void)$/;"	m	struct:__anon1::__anon2::__anon3::__anon4::__anon5::__anon6::__anon8::__anon9	file:	access:public
